generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  username        String           @unique
  email           String           @unique
  passwordHash    String           @map("password_hash")
  xpPoints        Int              @default(0) @map("xp_points")
  createdAt       DateTime         @default(now()) @map("created_at")
  answers         Answer[]
  examResults     ExamResult[]
  achievements    UserAchievement[]
  activityLogs    ActivityLog[]

  @@map("users")
}

model Topic {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  questions   Question[]

  @@map("topics")
}

model Question {
  id            Int       @id @default(autoincrement())
  topicId       Int       @map("topic_id")
  content       String
  correctAnswer String    @map("correct_answer")
  explanation   String?
  difficulty    Int
  createdAt     DateTime  @default(now()) @map("created_at")
  topic         Topic     @relation(fields: [topicId], references: [id])
  answers       Answer[]

  @@map("questions")
}

model Answer {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  questionId  Int       @map("question_id")
  answer      String
  isCorrect   Boolean   @map("is_correct")
  topic       String
  createdAt   DateTime  @default(now()) @map("created_at")
  user        User      @relation(fields: [userId], references: [id])
  question    Question  @relation(fields: [questionId], references: [id])

  @@map("answers")
}

model ExamResult {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  score     Int
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [id])

  @@map("exam_results")
}

model UserAchievement {
  id            Int       @id @default(autoincrement())
  userId        Int       @map("user_id")
  achievementId String    @map("achievement_id")
  earnedAt      DateTime  @default(now()) @map("earned_at")
  user          User      @relation(fields: [userId], references: [id])

  @@map("user_achievements")
}

model ActivityLog {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  type      String
  details   Json?
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [id])

  @@map("activity_logs")
}