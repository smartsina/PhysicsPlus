generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  username     String          @unique
  email        String          @unique
  password     String
  role         String          @default("user")
  xpPoints     Int             @default(0)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  answers      Answer[]
  examResults  ExamResult[]
  achievements UserAchievement[]
  activityLogs ActivityLog[]
}

model Topic {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  questions Question[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Question {
  id            Int      @id @default(autoincrement())
  text          String
  options       String[]
  correctAnswer String
  difficulty    Int      @default(1)
  topic        Topic    @relation(fields: [topicId], references: [id])
  topicId      Int
  answers      Answer[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Answer {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  answer     String
  isCorrect  Boolean
  topic      String
  createdAt  DateTime @default(now())
}

model ExamResult {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  score     Int
  topic     String
  createdAt DateTime @default(now())
}

model UserAchievement {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  achievementId String
  earnedAt    DateTime @default(now())
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  type      String
  details   Json
  createdAt DateTime @default(now())
}